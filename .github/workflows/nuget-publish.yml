name: Publish to NuGet

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for versioning

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Extract version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          # Remove 'v' prefix from tag (v1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore SwaggerWithSwagg/SwaggerWithSwagg.csproj

    - name: Build
      run: dotnet build SwaggerWithSwagg/SwaggerWithSwagg.csproj --configuration Release --no-restore

    - name: Run tests (if any)
      run: dotnet test --configuration Release --no-build --verbosity normal
      continue-on-error: true  # Continue even if no tests exist

    - name: Pack NuGet package
      run: |
        dotnet pack SwaggerWithSwagg/SwaggerWithSwagg.csproj \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          /p:Version=${{ steps.get_version.outputs.VERSION }} \
          /p:PackageVersion=${{ steps.get_version.outputs.VERSION }}

    - name: List created packages
      run: ls -la ./artifacts

    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package-${{ steps.get_version.outputs.VERSION }}
        path: ./artifacts/*.nupkg
        retention-days: 90
